type Registry @entity {
  id: ID!
  lendingPools: [LendingPool!]!
}

type LendingPool @entity {
  id: ID! # proxy
  addressProvider: Bytes! #address
  lendingPoolConfigurator: Bytes! # proxy
  poolAdmin: Bytes!
  emergencyAdmin: Bytes!
  priceOracle: Bytes!
  reserves: [Reserve!]! @derivedFrom(field: "pool")
  nfts: [NftCollection!]! @derivedFrom(field: "pool")
}

type Reserve @entity {
  id: ID! # underlying address, ETH = 0
  pool: LendingPool!

  configuration: BigInt!
  liquidityIndex: BigInt!
  debtIndex: BigInt!
  depositRate: BigInt!
  borrowRate: BigInt!
  lastUpdateTimestamp: BigInt!
  tToken: TToken! # proxy
  debtToken: DebtToken! # proxy
  interestRateCalculator: Bytes! #library
  treasury: Bytes! #address
  reserveId: BigInt!

  totalLiquidity: BigInt! # tToken.totalSupply() * liquidityIndex
  totalDebt: BigInt! # debtToken.totalSupply() * debtIndex

  users: [UserReserve!]! @derivedFrom(field: "reserve")
}

type NftCollection @entity {
  id: ID!  # underlying address
  pool: LendingPool!

  configuration: BigInt!
  tNFT: TNft! # proxy
  ercType: ERCType!

  totalLiquidity: BigInt! # tNFT.totalSupply()
  floorPrice: BigInt!

  users: [UserNftCollection!]! @derivedFrom(field: "collection")
}

type User @entity {
  id: ID! # address
  reserveConfig: BigInt!
  nftConfig: BigInt!
  reserves: [UserReserve!]! @derivedFrom(field: "user")
  collections: [UserNftCollection!]! @derivedFrom(field: "user")
}

type UserReserve @entity {
  id: ID! # user - reserve
  user: User!
  reserve: Reserve!
  depositedAmount: BigInt! # tToken.balanceOf(user) * LiqInx
  borrowedAmount: BigInt! # debtToken.balanceOf(user) * DebtIdx
  usedAsCollateral: Boolean!
}

type UserNftCollection  @entity {
  id: ID! # user - collection - tokenId
  user: User!
  collection: NftCollection!
  tokenIds: [BigInt!]!
  amounts: [BigInt!]!
}

enum ERCType {
  ERC20
  ERC721
  ERC1155
}

type TToken @entity {
  id: ID! # address
  pool: LendingPool!
  reserve: Reserve!
  incentivesController: Bytes! # address
  decimals: BigInt!
  name: String!
  symbol: String!
}

type DebtToken @entity {
  id: ID! # address
  pool: LendingPool!
  reserve: Reserve!
  incentivesController: Bytes! # address
  decimals: BigInt!
  name: String!
  symbol: String!
}

type TNft @entity {
  id: ID! # address
  pool: LendingPool!
  nftCollection: NftCollection!
  incentivesController: Bytes! # address
  name: String!
  symbol: String!
  ercType: ERCType!
}
