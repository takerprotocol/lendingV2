specVersion: 0.0.4
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: ILendingPool
    network: {{network}}
    source:
      address: "{{#LendingPool}}{{address}}{{/LendingPool}}"
      startBlock: {{#LendingPool}}{{startBlock}}{{/LendingPool}}
      abi: ILendingPool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - LendingPool
        - NftCollection
        - User
        - UserReserve
        - UserNftCollection
        - NftToken
      abis:
        - name: ILendingPool
          file: ./abis/ILendingPool.json
        - name: IPriceOracleGetter
          file: ./abis/IPriceOracleGetter.json
      eventHandlers:
        - event: Borrowed(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleBorrowed
        - event: Deposited(indexed address,address,indexed address,uint256)
          handler: handleDeposited
        - event: Liquidated(address,uint256,uint256,address,address,uint256,address,address,bool)
          handler: handleLiquidated
        - event: NFTsDeposited(address[],address,indexed address,uint256[],uint256[])
          handler: handleNFTsDeposited
        - event: NFTsWithdrawn(address[],indexed address,indexed address,uint256[],uint256[])
          handler: handleNFTsWithdrawn
        - event: Repaid(indexed address,indexed address,indexed address,uint256)
          handler: handleRepaid
        - event: Withdrawn(indexed address,indexed address,indexed address,uint256)
          handler: handleWithdrawn
        - event: CollateralStatusUpdated(indexed address,indexed address,bool)
          handler: handleCollateralStatusUpdated
      file: ./src/lending-pool.ts

  - kind: ethereum
    name: PoolConfigurator
    network: {{network}}
    source:
      address: "{{#PoolConfigurator}}{{address}}{{/PoolConfigurator}}"
      startBlock: {{#PoolConfigurator}}{{startBlock}}{{/PoolConfigurator}}
      abi: PoolConfigurator
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - LendingPool
        - NftCollection
        - User
        - UserReserve
        - UserNftCollection
        - NftToken
      abis:
        - name: PoolConfigurator
          file: ./abis/PoolConfigurator.json
        - name: IPriceOracleGetter
          file: ./abis/IPriceOracleGetter.json
        - name: ERC721
          file: ./abis/ERC721.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC1155
          file: ./abis/ERC1155.json
      eventHandlers:
        - event: NftReserveInitialized(indexed address,indexed address,uint8,uint256,uint256)
          handler: handleNftReserveInitialized
        - event: ReserveInitialized(indexed address,indexed address,address,address,uint256,uint256)
          handler: handleReserveInitialized
        - event: ReserveDropped(indexed address)
          handler: handleReserveDropped
      file: ./src/lending-pool.ts

  - kind: ethereum
    name: IPriceOracleGetter
    network: {{network}}
    source:
      address: "{{#IPriceOracleGetter}}{{address}}{{/IPriceOracleGetter}}"
      startBlock: {{#IPriceOracleGetter}}{{startBlock}}{{/IPriceOracleGetter}}
      abi: IPriceOracleGetter
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - NftCollection
        - UserNftCollection
        - User
        - PriceAggregator
      abis:
        - name: IPriceOracleGetter
          file: ./abis/IPriceOracleGetter.json
        - name: IPriceAggregator
          file: ./abis/IPriceAggregator.json
        - name: ILendingPool
          file: ./abis/ILendingPool.json
      eventHandlers:
        - event: NewNFTPrice(indexed address,uint256)
          handler: handleNewNFTPrice
        - event: SetTokenAggregator(address,address)
          handler: handleAggregatorSet
      file: ./src/oracle.ts

  - kind: ethereum
    name: CryptoPunks
    network: {{network}}
    source:
      address: "{{#CryptoPunks}}{{address}}{{/CryptoPunks}}"
      startBlock: {{#CryptoPunks}}{{startBlock}}{{/CryptoPunks}}
      abi: CryptoPunks
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - CryptoPunk
      abis:
        - name: CryptoPunks
          file: ./abis/CryptoPunks.json
      eventHandlers:
        - event: Assign(indexed address,uint256)
          handler: handleAssign
        - event: PunkTransfer(indexed address,indexed address,uint256)
          handler: handlePunkTransfer
        - event: PunkBought(indexed uint256,uint256,indexed address,indexed address)
          handler: handlePunkBought
      file: ./src/punks.ts

templates:
  - kind: ethereum
    name: IPriceAggregator
    network: {{network}}
    source:
      abi: IPriceAggregator
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - PriceAggregator
      abis:
        - name: IPriceOracleGetter
          file: ./abis/IPriceOracleGetter.json
        - name: IPriceAggregator
          file: ./abis/IPriceAggregator.json
        - name: ILendingPool
          file: ./abis/ILendingPool.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdated
      file: ./src/oracle.ts